"use strict";(self.webpackChunkdocs_surrealdb_com=self.webpackChunkdocs_surrealdb_com||[]).push([[3458],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>f});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),u=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=u(t.components);return n.createElement(s.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),p=u(a),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return a?n.createElement(f,i(i({ref:e},c),{},{components:a})):n.createElement(f,i({ref:e},c))}));function f(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[p]="string"==typeof t?t:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7887:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:3},i=void 0,o={unversionedId:"Security/capabilities",id:"Security/capabilities",title:"capabilities",description:"Capabilities",source:"@site/docs/Security/capabilities.mdx",sourceDirName:"Security",slug:"/Security/capabilities",permalink:"/docs/Security/capabilities",draft:!1,editUrl:"https://github.com/surrealdb/docs.surrealdb.com/edit/main/docs/Security/capabilities.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"authentication",permalink:"/docs/Security/authentication"},next:{title:"Deployment",permalink:"/docs/category/deployment"}},s={},u=[{value:"Capabilities",id:"capabilities",level:2},{value:"Capabilities list",id:"capabilities-list",level:3},{value:"Guest access",id:"guest-access",level:2},{value:"Functions",id:"functions",level:2},{value:"Network",id:"network",level:2}],c={toc:u},p="wrapper";function d(t){let{components:e,...a}=t;return(0,r.kt)(p,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"capabilities"},"Capabilities"),(0,r.kt)("p",null,"SurrealDB is secure by default and is suitable for all database use cases. It offers powerful features like scripting, functions or network access from within your SurrealQL queries. To aid flexibility, SurrealDB doesn't enable any of these features by default and lets the administrator enable them as needed per use case."),(0,r.kt)("p",null,"When a query wants to use a feature that is not enabled, SurrealDB will reject it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Rejected Query"',title:'"Rejected','Query"':!0},"> RETURN http::get(\"www.surrealdb.com\");\n\nThere was a problem with the database: Function 'http::get' is not allowed to be executed\n\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"capabilities-list"},"Capabilities list"),(0,r.kt)("p",null,"List of options for allowing capabilities:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--allow-scripting"),(0,r.kt)("td",{parentName:"tr",align:null},"Allow execution of embedded scripting functions"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--allow-guests"),(0,r.kt)("td",{parentName:"tr",align:null},"Allow non-authenticated users to execute queries when authentication is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--allow-funcs ",(0,r.kt)("inlineCode",{parentName:"td"},"[<target>,...]")),(0,r.kt)("td",{parentName:"tr",align:null},"Allow execution of all functions. Optionally, you can provide a comma-separated list of function names to allow"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--allow-net ",(0,r.kt)("inlineCode",{parentName:"td"},"[<target>,...] ")),(0,r.kt)("td",{parentName:"tr",align:null},"Allow all outbound network access. Optionally, you can provide a comma-separated list of targets to allow"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-A, --allow-all"),(0,r.kt)("td",{parentName:"tr",align:null},"Allow all capabilities above"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("p",null,"List of options for denying capabilities:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--deny-scripting"),(0,r.kt)("td",{parentName:"tr",align:null},"Deny execution of embedded scripting functions"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--deny-guests"),(0,r.kt)("td",{parentName:"tr",align:null},"Deny non-authenticated users to execute queries when authentication is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--deny-funcs ",(0,r.kt)("inlineCode",{parentName:"td"},"[<target>,...]")),(0,r.kt)("td",{parentName:"tr",align:null},"Deny execution of all functions. Optionally, you can provide a comma-separated list of function names to allow"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--deny-net ",(0,r.kt)("inlineCode",{parentName:"td"},"[<target>,...]")),(0,r.kt)("td",{parentName:"tr",align:null},"Deny all outbound network access. Optionally, you can provide a comma-separated list of targets to allow"),(0,r.kt)("td",{parentName:"tr",align:null},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-D, --deny-all"),(0,r.kt)("td",{parentName:"tr",align:null},"Deny all capabilities above"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Denied capabilities will override any allowed capability that matches.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"guest-access"},"Guest access"),(0,r.kt)("p",null,"Guest access is used when you want to expose certain parts of a database to non-authenticated users. It's useful when you want to serve datasets publicly and still require authentication for the rest of the system."),(0,r.kt)("p",null,"Even when this capability is allowed, a guest user can only execute functions or data operations like SELECT, CREATE, etc, and only if the ",(0,r.kt)("inlineCode",{parentName:"p"},"PERMISSIONS")," clause for the resource being used in the query allows it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"// Prepare tables with custom PERMISSIONS\ntest/test> DEFINE TABLE protected PERMISSIONS NONE;\ntest/test> DEFINE TABLE public PERMISSIONS FULL;\n\n// When guest access is allowed\n$ surreal start --allow-guests\n\ntest/test> CREATE public;\n[{ id: public:uy0qzy31v4xox8vivrd4 }]\n\ntest/test> SELECT * FROM public;\n[{ id: public:uy0qzy31v4xox8vivrd4 }]\n\ntest/test> CREATE protected;\n[]\n\ntest/test> SELECT * FROM protected;\n[]\n\n// When guest access is denied\n$ surreal start --deny-guests\n\ntest/test> CREATE public;\nThere was a problem with the database: There was a problem with the database: IAM error: Not enough permissions to perform this action\n\ntest/test> SELECT * FROM public;\nThere was a problem with the database: There was a problem with the database: IAM error: Not enough permissions to perform this action\n\ntest/test> CREATE protected;\nThere was a problem with the database: There was a problem with the database: IAM error: Not enough permissions to perform this action\n\ntest/test> SELECT * FROM protected;\nThere was a problem with the database: There was a problem with the database: IAM error: Not enough permissions to perform this action\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("p",null,"SurrealDB offers ",(0,r.kt)("a",{parentName:"p",href:"/docs/surrealql/functions"},"built-in functions")," to perform common operations like string manipulation, math, etc. Users can also define ",(0,r.kt)("a",{parentName:"p",href:"/docs/surrealql/statements/define/function"},"their own functions")," with custom logic."),(0,r.kt)("p",null,"In certain environments, you may not want users to use specific functions (i.e. http::*) or execute any custom function at all. You can use the allow/deny lists to configure what functions are allowed and what functions are denied."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'// Allow all functions except the http family and crypto::md5()\nsurreal start --allow-funcs --deny-funcs "http","crypto::md5"\n\n// Allow certain custom functions only (all custom functions start with "fn::")\nsurreal start --allow-funcs "fn::shared_fn"\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"network"},"Network"),(0,r.kt)("p",null,"SurrealDB offers http functions that can access external network endpoints."),(0,r.kt)("p",null,"If you want to allow or deny access to certain network target, you can configure the network options accordingly. Here are some examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'// Deny network access to localhost and private IPv4 ranges\n$ surreal start --allow-net --deny-net "127.0.0.1","localhost","10.0.0.0/8","192.168.0.0/16","172.16.0.0/12"\n\n// Allow access to an internal system but only to port 443\n$ surreal start --allow-net internal.example.com:433\n\n// Allow access to some private networks but not to others\n$ surreal start --allow-net 10.0.0.0/16 --deny-net 10.10.0.0/24\n')))}d.isMDXComponent=!0}}]);