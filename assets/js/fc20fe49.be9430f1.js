"use strict";(self.webpackChunkdocs_surrealdb_com=self.webpackChunkdocs_surrealdb_com||[]).push([[5187],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,h=c["".concat(i,".").concat(m)]||c[m]||p[m]||o;return r?n.createElement(h,l(l({ref:t},d),{},{components:r})):n.createElement(h,l({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:a,l[1]=s;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1262:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:6},l=void 0,s={unversionedId:"Installation/Run With Docker",id:"Installation/Run With Docker",title:"Run With Docker",description:"Run with Docker",source:"@site/docs/Installation/Run With Docker.mdx",sourceDirName:"Installation",slug:"/Installation/Run With Docker",permalink:"/docs/Installation/Run With Docker",draft:!1,editUrl:"https://github.com/surrealdb/docs.surrealdb.com/edit/main/docs/Installation/Run With Docker.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Install the Nightly",permalink:"/docs/Installation/Install the Nightly"},next:{title:"Run an in memory server",permalink:"/docs/Installation/Run an in memory server"}},i={},u=[{value:"Run with Docker",id:"run-with-docker",level:2},{value:"Running the SurrealDB server using Docker",id:"running-the-surrealdb-server-using-docker",level:2},{value:"Using the command-line tools within Docker",id:"using-the-command-line-tools-within-docker",level:2}],d={toc:u},c="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"run-with-docker"},"Run with Docker"),(0,a.kt)("p",null,"Use this tutorial to run SurrealDB from within Docker."),(0,a.kt)("h2",{id:"running-the-surrealdb-server-using-docker"},"Running the SurrealDB server using Docker"),(0,a.kt)("p",null,"To get started using Docker, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"latest")," tag. To start a server use the ",(0,a.kt)("a",{parentName:"p",href:"/docs/CLI%20tool/start_command"},(0,a.kt)("inlineCode",{parentName:"a"},"start"))," command. By default SurrealDB runs on port ",(0,a.kt)("inlineCode",{parentName:"p"},"8000"),". To view all the available versions and tags, or to use a specific tag visit the ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/surrealdb/surrealdb"},"Docker Hub")," page."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --pull always -p 8000:8000 surrealdb/surrealdb:latest start\n")),(0,a.kt)("p",null,"In order to persist data when the Docker instance is restarted or shutdown, specify a Docker folder using the Docker ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"-v"))," command line argument, and use the on-disk storage engine in SurrealDB using the path prefix chosen as a Docker folder."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --pull always -p 8000:8000 -v /mydata:/mydata surrealdb/surrealdb:latest start file:/mydata/mydatabase.db\n")),(0,a.kt)("p",null,"The default logging level for the database server is ",(0,a.kt)("inlineCode",{parentName:"p"},"info"),", resulting in any informational logs to be output to the standard output. To control the logging verbosity, specify the ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"--log"))," argument. The following command starts the database with ",(0,a.kt)("inlineCode",{parentName:"p"},"trace")," level logging, resulting in most logs being output to the terminal."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --pull always -p 8000:8000 -v /mydata:/mydata surrealdb/surrealdb:latest start --log trace file:/mydata/mydatabase.db\n")),(0,a.kt)("p",null,"In order to keep SurrealDB secure, configure your initial root-level user by setting the ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"--user"))," and ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"--pass"))," command-line arguments. The following command starts the database with a top-level user named ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," with a password also set to ",(0,a.kt)("inlineCode",{parentName:"p"},"root"),". The root user will be persisted in storage, which means you don't have to include the command line arguments next time you start SurrealDB."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --pull always -p 80:8000 -v /mydata:/mydata surrealdb/surrealdb:latest start --log trace --auth --user root --pass root file:mydatabase.db\n")),(0,a.kt)("p",null,"In order to change the default port that SurrealDB uses for web connections and from database clients you can use the Docker ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"-p"))," command line argument to tunnel the port to the internal SurrealDB port which SurrealDB is served on. The following command starts the database on port ",(0,a.kt)("inlineCode",{parentName:"p"},"80"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --pull always -p 80:8000 -v /mydata:/mydata surrealdb/surrealdb:latest start --log trace --user root --pass root file:/mydata/mydatabase.db\n")),(0,a.kt)("p",null,"After running the above command, you should see the SurrealDB server startup successfully."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --pull always -p 80:8000 -v /local-dir:/container-dir surrealdb/surrealdb:latest start --auth --user root --pass root file:/container-dir/mydatabase.db\n\n2023-08-30T15:06:34.788739Z  INFO surreal::dbs: \u2705\ud83d\udd12 Authentication is enabled \ud83d\udd12\u2705\n2023-08-30T15:06:34.788821Z  INFO surrealdb::kvs::ds: Starting kvs store in file:/container-dir/mydatabase.db\n2023-08-30T15:06:34.788859Z  INFO surrealdb::kvs::ds: Started kvs store in file:/container-dir/mydatabase.db\n2023-08-30T15:06:34.789222Z  INFO surrealdb::kvs::ds: Initial credentials were provided and no existing root-level users were found: create the initial user 'root'.\n2023-08-30T15:06:35.205123Z  INFO surrealdb::node: Started node agent\n2023-08-30T15:06:35.205827Z  INFO surrealdb::net: Started web server on 0.0.0.0:8080\n")),(0,a.kt)("p",null,"For details on the ",(0,a.kt)("a",{parentName:"p",href:"/docs/CLI%20tool/start_command"},(0,a.kt)("inlineCode",{parentName:"a"},"start"))," command, and all of the available configuration options and arguments, view the ",(0,a.kt)("a",{parentName:"p",href:"/docs/CLI%20tool/start_command"},(0,a.kt)("inlineCode",{parentName:"a"},"start command documentation")),"."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"using-the-command-line-tools-within-docker"},"Using the command-line tools within Docker"),(0,a.kt)("p",null,"The Docker container contains both the server, and the command line tools for importing, exporting, and querying a remote SurrealDB server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --pull always surrealdb/surrealdb:latest help\n")),(0,a.kt)("p",null,"The result should look similar to the output below, confirming that the SurrealDB command-line tool was installed successfully."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},".d8888b.                                             888 8888888b.  888888b.\nd88P  Y88b                                            888 888  'Y88b 888  '88b\nY88b.                                                 888 888    888 888  .88P\n 'Y888b.   888  888 888d888 888d888  .d88b.   8888b.  888 888    888 8888888K.\n    'Y88b. 888  888 888P'   888P'   d8P  Y8b     '88b 888 888    888 888  'Y88b\n      '888 888  888 888     888     88888888 .d888888 888 888    888 888    888\nY88b  d88P Y88b 888 888     888     Y8b.     888  888 888 888  .d88P 888   d88P\n 'Y8888P'   'Y88888 888     888      'Y8888  'Y888888 888 8888888P'  8888888P'\n\n\nSurrealDB command-line interface and server\n\nTo get started using SurrealDB, and for guides on connecting to and building applications\non top of SurrealDB, check out the SurrealDB documentation (https://surrealdb.com/docs).\n\nIf you have questions or ideas, join the SurrealDB community (https://surrealdb.com/community).\n\nIf you find a bug, submit an issue on Github (https://github.com/surrealdb/surrealdb/issues).\n\nWe would love it if you could star the repository (https://github.com/surrealdb/surrealdb).\n\n----------\n\nUSAGE:\n    surreal [SUBCOMMAND]\n\nOPTIONS:\n    -h, --help    Print help information\n\nSUBCOMMANDS:\n    start      Start the database server\n    backup     Backup data to or from an existing database\n    import     Import a SQL script into an existing database\n    export     Export an existing database into a SQL script\n    version    Output the command-line tool version information\n    sql        Start an SQL REPL in your terminal with pipe support\n    help       Print this message or the help of the given subcommand(s)\n\n")),(0,a.kt)("p",null,"For details on the different commands available, visit the ",(0,a.kt)("a",{parentName:"p",href:"/docs/CLI%20tool"},"CLI tool documentation"),"."))}p.isMDXComponent=!0}}]);