"use strict";(self.webpackChunkdocs_surrealdb_com=self.webpackChunkdocs_surrealdb_com||[]).push([[5135],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),c=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),h=n,m=d["".concat(o,".").concat(h)]||d[h]||p[h]||l;return r?a.createElement(m,i(i({ref:t},u),{},{components:r})):a.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<l;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6202:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const l={sidebar_position:3},i=void 0,s={unversionedId:"Deployment/Deploy on Kubernetes",id:"Deployment/Deploy on Kubernetes",title:"Deploy on Kubernetes",description:"Deploy on Kubernetes",source:"@site/docs/Deployment/Deploy on Kubernetes.mdx",sourceDirName:"Deployment",slug:"/Deployment/Deploy on Kubernetes",permalink:"/docs/Deployment/Deploy on Kubernetes",draft:!1,editUrl:"https://github.com/surrealdb/docs.surrealdb.com/edit/main/docs/Deployment/Deploy on Kubernetes.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Deploy on Flyio",permalink:"/docs/Deployment/Deploy on Flyio"},next:{title:"Deploy on GCP",permalink:"/docs/Deployment/Deploy on GCP"}},o={},c=[{value:"Deploy on Kubernetes",id:"deploy-on-kubernetes",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Create <code>KIND</code> Cluster",id:"create-kind-cluster",level:2},{value:"1. Let\u2019s create a new cluster:",id:"1-lets-create-a-new-cluster",level:3},{value:"2. Verify we can interact with the created cluster",id:"2-verify-we-can-interact-with-the-created-cluster",level:3},{value:"Deploy TiDB operator",id:"deploy-tidb-operator",level:2},{value:"Create TiDB cluster",id:"create-tidb-cluster",level:2},{value:"1. Create a namespace for the TiDB cluster:",id:"1-create-a-namespace-for-the-tidb-cluster",level:3},{value:"2. Create the TiDB cluster:",id:"2-create-the-tidb-cluster",level:3},{value:"3. Check the cluster status and wait until it\u2019s ready:",id:"3-check-the-cluster-status-and-wait-until-its-ready",level:3},{value:"Deploy SurrealDB",id:"deploy-surrealdb",level:2},{value:"1. Add the SurrealDB Charts repository:",id:"1-add-the-surrealdb-charts-repository",level:3},{value:"2. Get the TIKV PD service url:",id:"2-get-the-tikv-pd-service-url",level:3},{value:"3. Install the SurrealDB Helm chart with the TIKV_URL defined above and with auth disabled so we can create the initial credentials:",id:"3-install-the-surrealdb-helm-chart-with-the-tikv_url-defined-above-and-with-auth-disabled-so-we-can-create-the-initial-credentials",level:3},{value:"4. Connect to the cluster and define the initial credentials (see in the section below how to connect):",id:"4-connect-to-the-cluster-and-define-the-initial-credentials-see-in-the-section-below-how-to-connect",level:3},{value:"5. Now that the initial credentials have been created, enable authentication:",id:"5-now-that-the-initial-credentials-have-been-created-enable-authentication",level:3},{value:"Run SurrealDB experiments",id:"run-surrealdb-experiments",level:2},{value:"1. Start port-forwarding to the SurrealDB service:",id:"1-start-port-forwarding-to-the-surrealdb-service",level:3},{value:"2. Connect to the SurrealDB server using the CLI from another shell:",id:"2-connect-to-the-surrealdb-server-using-the-cli-from-another-shell",level:3},{value:"3. Create a SurrealDB database:",id:"3-create-a-surrealdb-database",level:3},{value:"Conclusion",id:"conclusion",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"deploy-on-kubernetes"},"Deploy on Kubernetes"),(0,n.kt)("p",null,"In this guide, we will deploy SurrealDB to KIND (Kubernetes in Docker) using TiKV as the storage engine: TiKV is a cloud-native transactional key/value store that integrates well with Kubernetes thanks to their tidb-operator."),(0,n.kt)("p",null,"At the end, we will run a few experiments using SurrealQL to verify that we can interact with the new cluster and will destroy some Kubernetes pods to see that data is highly available."),(0,n.kt)("h2",{id:"requirements"},"Requirements"),(0,n.kt)("p",null,"For this guide, we need to install:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/"},(0,n.kt)("inlineCode",{parentName:"a"},"kubectl"))," : To manage the Kubernetes cluster"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://helm.sh/docs/intro/install/"},(0,n.kt)("inlineCode",{parentName:"a"},"helm"))," : To install SurrealDB server and TiKV"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://kind.sigs.k8s.io/"},(0,n.kt)("inlineCode",{parentName:"a"},"KIND"))," and ",(0,n.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," :To run a local Kubernetes cluster inside a Docker container"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://surrealdb.com/install"},(0,n.kt)("inlineCode",{parentName:"a"},"Surreal CLI"))," : To interact with the SurrealDB server")),(0,n.kt)("h2",{id:"create-kind-cluster"},"Create ",(0,n.kt)("a",{parentName:"h2",href:"https://kind.sigs.k8s.io/"},(0,n.kt)("inlineCode",{parentName:"a"},"KIND"))," Cluster"),(0,n.kt)("p",null,"First, we need to create a ",(0,n.kt)("a",{parentName:"p",href:"https://kind.sigs.k8s.io/"},(0,n.kt)("inlineCode",{parentName:"a"},"KIND"))," cluster. KIND is a tool for running local Kubernetes clusters using Docker container \u201cnodes\u201d. It\u2019s a great tool for experimenting with Kubernetes without spending a lot of time creating a full-featured cluster."),(0,n.kt)("p",null,"Run the following command to create a cluster:"),(0,n.kt)("h3",{id:"1-lets-create-a-new-cluster"},"1. Let\u2019s create a new cluster:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Crete new cluster"',title:'"Crete',new:!0,'cluster"':!0},"kind create cluster -n surreal-demo\n")),(0,n.kt)("h3",{id:"2-verify-we-can-interact-with-the-created-cluster"},"2. Verify we can interact with the created cluster"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl config current-context\nkind-surreal-demo\nkubectl get ns\nNAME                 STATUS   AGE\ndefault              Active   79s\nkube-node-lease      Active   79s\nkube-public          Active   79s\nkube-system          Active   79s\nlocal-path-storage   Active   75s\n")),(0,n.kt)("h2",{id:"deploy-tidb-operator"},"Deploy TiDB operator"),(0,n.kt)("p",null,"Now that we have a Kubernetes cluster, we can deploy the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/pingcap/tidb-operator"},(0,n.kt)("inlineCode",{parentName:"a"},"TiDB operator")),". TiDB operator is a Kubernetes operator that manages the lifecycle of TiDB clusters deployed to Kubernetes."),(0,n.kt)("p",null,"You can deploy it following these steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install CRDS:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Install"',title:'"Install"'},"kubectl create -f https://raw.githubusercontent.com/pingcap/tidb-operator/v1.4.5/manifests/crd.yaml\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Install TiDB Operator Helm chart:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Update HELM repositories"',title:'"Update',HELM:!0,'repositories"':!0},"helm repo add pingcap https://charts.pingcap.org\nhelm repo update\nhelm install \\\n    -n tidb-operator \\\n  --create-namespace \\\n    tidb-operator \\\n    pingcap/tidb-operator \\\n    --version v1.4.5\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Verify that the Pods are running:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods --namespace tidb-operator -l app.kubernetes.io/instance=tidb-operator\nNAME                                       READY   STATUS    RESTARTS   AGE\ntidb-controller-manager-56f49794d7-hnfz7   1/1     Running   0          20s\ntidb-scheduler-8655bcbc86-66h2d            2/2     Running   0          20s\n")),(0,n.kt)("h2",{id:"create-tidb-cluster"},"Create TiDB cluster"),(0,n.kt)("p",null,"Now that we have the TiDB Operator running, it\u2019s time to define a TiDB Cluster and let the Operator do the rest. One of the TiDB Cluster components is the TiKV, which we are interested in.\nGiven this is a demo, we will use a basic example cluster, but there are several examples in the official GitHub repo in case you need a more production-grade deployment"),(0,n.kt)("p",null,"Run the following commands to deploy the TiKV cluster:"),(0,n.kt)("h3",{id:"1-create-a-namespace-for-the-tidb-cluster"},"1. Create a namespace for the TiDB cluster:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create ns tikv\n")),(0,n.kt)("h3",{id:"2-create-the-tidb-cluster"},"2. Create the TiDB cluster:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Create TIDB Cluster"',title:'"Create',TIDB:!0,'Cluster"':!0},"kubectl apply -n tikv -f https://raw.githubusercontent.com/pingcap/tidb-operator/v1.4.5/examples/basic/tidb-cluster.yaml\n")),(0,n.kt)("h3",{id:"3-check-the-cluster-status-and-wait-until-its-ready"},"3. Check the cluster status and wait until it\u2019s ready:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Verify TIDB Cluster"',title:'"Verify',TIDB:!0,'Cluster"':!0},"kubectl get -n tikv tidbcluster\nNAME    READY   PD                  STORAGE   READY   DESIRE   TIKV   STORAGE   READY   DESIRE   TIDB   READY   DESIRE   AGE\nbasic   False   pingcap/pd:v6.5.0   1Gi       1       1               1Gi               1                       1        41s\n$ kubectl get -n tikv tidbcluster\nNAME    READY   PD                  STORAGE   READY   DESIRE   TIKV                  STORAGE   READY   DESIRE   TIDB                  READY   DESIRE   AGE\nbasic   True    pingcap/pd:v6.5.0   1Gi       1       1        pingcap/tikv:v6.5.0   1Gi       1       1        pingcap/tidb:v6.5.0   1       1        5m\n")),(0,n.kt)("h2",{id:"deploy-surrealdb"},"Deploy SurrealDB"),(0,n.kt)("p",null,"Now that we have a TiDB cluster running, we can deploy SurrealDB.\nFor this guide, we will use the SurrealDB Helm chart. Run the following commands to deploy SurrealDB:"),(0,n.kt)("h3",{id:"1-add-the-surrealdb-charts-repository"},"1. Add the SurrealDB Charts repository:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Add SurrealDB Helm repository"',title:'"Add',SurrealDB:!0,Helm:!0,'repository"':!0},"helm repo add surrealdb https://helm.surrealdb.com\nhelm repo update\n")),(0,n.kt)("h3",{id:"2-get-the-tikv-pd-service-url"},"2. Get the TIKV PD service url:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Get TIKV PD service URL"',title:'"Get',TIKV:!0,PD:!0,service:!0,'URL"':!0},"kubectl get -n tikv svc/basic-pd\nNAME       TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE\nbasic-pd   ClusterIP   10.96.208.25   <none>        2379/TCP   10h\n\nexport TIKV_URL=tikv://basic-pd.tikv:2379\n")),(0,n.kt)("h3",{id:"3-install-the-surrealdb-helm-chart-with-the-tikv_url-defined-above-and-with-auth-disabled-so-we-can-create-the-initial-credentials"},"3. Install the SurrealDB Helm chart with the TIKV_URL defined above and with auth disabled so we can create the initial credentials:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Install SurrealDB HELM chart"',title:'"Install',SurrealDB:!0,HELM:!0,'chart"':!0},"helm install --set surrealdb.path=$TIKV_URL --set surrealdb.auth=false surrealdb-tikv surrealdb/surrealdb\n")),(0,n.kt)("h3",{id:"4-connect-to-the-cluster-and-define-the-initial-credentials-see-in-the-section-below-how-to-connect"},"4. Connect to the cluster and define the initial credentials (see in the section below how to connect):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"surreal sql -e http://...\n> DEFINE USER root ON ROOT PASSWORD 'StrongSecretPassword!' ROLES OWNER;\n\nVerify you can connect to the database with the new credentials:\nsurreal sql -u root -p 'StrongSecretPassword!' -e http://...\n> INFO FOR ROOT\n[{ namespaces: { }, users: { root: \"DEFINE USER root ON ROOT PASSHASH '...' ROLES OWNER\" } }]\n")),(0,n.kt)("h3",{id:"5-now-that-the-initial-credentials-have-been-created-enable-authentication"},"5. Now that the initial credentials have been created, enable authentication:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Update SurrealDB Helm Chart"',title:'"Update',SurrealDB:!0,Helm:!0,'Chart"':!0},"helm upgrade --set surrealdb.path=$TIKV_URL surrealdb-tikv surrealdb/surrealdb\n")),(0,n.kt)("h2",{id:"run-surrealdb-experiments"},"Run SurrealDB experiments"),(0,n.kt)("p",null,"Now that we have SurrealDB running, we can run some experiments to verify that everything is working as expected.\nFor this guide, we will use the Surreal CLI. Run the following commands to run some experiments:"),(0,n.kt)("h3",{id:"1-start-port-forwarding-to-the-surrealdb-service"},"1. Start port-forwarding to the SurrealDB service:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl port-forward svc/surrealdb-tikv 8000\nForwarding from 127.0.0.1:8000 -> 8000\nForwarding from [::1]:8000 -> 8000\n")),(0,n.kt)("h3",{id:"2-connect-to-the-surrealdb-server-using-the-cli-from-another-shell"},"2. Connect to the SurrealDB server using the CLI from another shell:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"surreal sql --conn 'http://localhost:8000' --user root --pass surrealdb \n")),(0,n.kt)("h3",{id:"3-create-a-surrealdb-database"},"3. Create a SurrealDB database:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"surreal sql --conn 'http://localhost:8000' --user root --pass surrealdb\n> USE NS ns DB db;\n\nns/db> CREATE record;\n{ id: record:wbd69kmc81l4fbee7pit }\nns/db> CREATE record;\n{ id: record:vnyfsr22ovhmmtcm5y1t }\nns/db> CREATE record;\n{ id: record:se49petzb7c4bc7yge0z }\nns/db> SELECT * FROM record;\n[{ id: record:se49petzb7c4bc7yge0z }, { id: record:vnyfsr22ovhmmtcm5y1t }, { id: record:wbd69kmc81l4fbee7pit }]\nns/db>\n")),(0,n.kt)("p",null,"The data created above has been persisted to the TiKV cluster. Let\u2019s verify it by deleting the SurrealDB server and let Kubernetes recreate it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl get pod\nNAME                              READY   STATUS    RESTARTS   AGE\nsurrealdb-tikv-7488f6f654-lsrwp   1/1     Running   0          13m\nkubectl delete pod surrealdb-tikv-7488f6f654-lsrwp\npod "surrealdb-tikv-7488f6f654-lsrwp" deleted\nkubectl get pod\nNAME                              READY   STATUS    RESTARTS   AGE\nsurrealdb-tikv-7488f6f654-bnkjz   1/1     Running   0          4s\n')),(0,n.kt)("p",null,"Connect again and verify the data is still there (you may need to re-run the port-forwarding command):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"surreal sql --conn 'http://localhost:8000' --user root --pass surrealdb\n> USE NS ns DB db;\n\nns/db> SELECT * FROM record;\n[{ id: record:se49petzb7c4bc7yge0z }, { id: record:vnyfsr22ovhmmtcm5y1t }, { id: record:wbd69kmc81l4fbee7pit }]\nns/db>\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Given we are using KIND, we use  ",(0,n.kt)("inlineCode",{parentName:"p"},"port-forwarding"),"  for demonstration purposes.\nIn a full-featured Kubernetes cluster, you could set  ",(0,n.kt)("inlineCode",{parentName:"p"},"ingress.enabled=true"),"  when installing the SurrealDB Helm Chart and it would create a Load Balancer in front of the SurrealDB server pods.")),(0,n.kt)("h2",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"This guide demonstrated how to deploy SurrealDB on Kubernetes using TiKV as a datastore. From here, you could try and deploy to ",(0,n.kt)("a",{parentName:"p",href:"https://aws.amazon.com/eks/"},(0,n.kt)("inlineCode",{parentName:"a"},"EKS"))," , ",(0,n.kt)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine"},(0,n.kt)("inlineCode",{parentName:"a"},"GKE"))," or ",(0,n.kt)("a",{parentName:"p",href:"https://azure.microsoft.com/en-us/products/kubernetes-service"},(0,n.kt)("inlineCode",{parentName:"a"},"AKS"))," , and play with the different configurations for the TiKV cluster."))}p.isMDXComponent=!0}}]);